/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExPopulusCards,
  ExPopulusCardsInterface,
} from "../ExPopulusCards";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "mintCard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50606d80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633993c22014602d575b600080fd5b60336035565b005b56fea26469706673582212205ffa46465392c28c368bbc440a7c790dbe6951940f6cb536d4bf924ce065264464736f6c634300080c0033";

export class ExPopulusCards__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExPopulusCards> {
    return super.deploy(overrides || {}) as Promise<ExPopulusCards>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExPopulusCards {
    return super.attach(address) as ExPopulusCards;
  }
  connect(signer: Signer): ExPopulusCards__factory {
    return super.connect(signer) as ExPopulusCards__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExPopulusCardsInterface {
    return new utils.Interface(_abi) as ExPopulusCardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExPopulusCards {
    return new Contract(address, _abi, signerOrProvider) as ExPopulusCards;
  }
}
